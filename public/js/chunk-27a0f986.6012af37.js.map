{"version":3,"sources":["webpack:///../../../src/mixins/scrollable/index.ts","webpack:///../../../src/components/VGrid/VSpacer.ts","webpack:///../../../src/mixins/applicationable/index.ts","webpack:///../../../src/components/VAppBar/VAppBar.ts","webpack:///../../../src/components/VToolbar/VToolbar.ts","webpack:///../../../src/directives/scroll/index.ts"],"names":["name","directives","Scroll","props","scrollTarget","scrollThreshold","String","Number","data","currentScroll","currentThreshold","isActive","isScrollingUp","previousScroll","savedScroll","target","computed","canScroll","window","computedScrollThreshold","this","watch","mounted","document","methods","onScroll","Math","thresholdMet","events","app","Boolean","applicationProperty","prev","removeApplication","activated","created","i","length","deactivated","destroyed","callUpdate","force","updateApplication","baseMixins","provide","VAppBar","clippedLeft","clippedRight","collapseOnScroll","elevateOnScroll","fadeImgOnScroll","hideOnScroll","invertedScroll","scrollOffScreen","shrinkOnScroll","value","type","default","classes","collapse","scrollRatio","threshold","computedContentHeight","min","dense","max","computedFontSize","computedLeft","$vuetify","application","computedMarginTop","computedOpacity","computedOriginalHeight","height","parseInt","computedRight","computedTransform","bottom","hideShadow","isCollapsed","isProminent","styles","fontSize","marginTop","transform","left","right","val","genBackground","render","_b","style","opacity","computedHeight","arg","absolute","extended","extensionHeight","flat","floating","prominent","short","src","tag","isExtended","isNaN","breakpoint","breakingProps","original","replacement","image","$scopedSlots","img","$createElement","staticClass","genContent","genExtension","children","setBackgroundColor","class","on","$listeners","h","inserted","binding","self","options","passive","handler","el","undefined","unbind"],"mappings":"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","file":"js/chunk-27a0f986.6012af37.js","sourcesContent":["// Directives\nimport { Scroll } from '../../directives'\n\n// Utilities\nimport { consoleWarn } from '../../util/console'\n\n// Types\nimport Vue from 'vue'\n\n/**\n * Scrollable\n *\n * Used for monitoring scrolling and\n * invoking functions based upon\n * scrolling thresholds being\n * met.\n */\n/* @vue/component */\nexport default Vue.extend({\n  name: 'scrollable',\n\n  directives: { Scroll },\n\n  props: {\n    scrollTarget: String,\n    scrollThreshold: [String, Number],\n  },\n\n  data: () => ({\n    currentScroll: 0,\n    currentThreshold: 0,\n    isActive: false,\n    isScrollingUp: false,\n    previousScroll: 0,\n    savedScroll: 0,\n    target: null as Element | null,\n  }),\n\n  computed: {\n    /**\n     * A computed property that returns\n     * whether scrolling features are\n     * enabled or disabled\n     */\n    canScroll (): boolean {\n      return typeof window !== 'undefined'\n    },\n    /**\n     * The threshold that must be met before\n     * thresholdMet function is invoked\n     */\n    computedScrollThreshold (): number {\n      return this.scrollThreshold\n        ? Number(this.scrollThreshold)\n        : 300\n    },\n  },\n\n  watch: {\n    isScrollingUp () {\n      this.savedScroll = this.savedScroll || this.currentScroll\n    },\n    isActive () {\n      this.savedScroll = 0\n    },\n  },\n\n  mounted () {\n    if (this.scrollTarget) {\n      this.target = document.querySelector(this.scrollTarget)\n\n      if (!this.target) {\n        consoleWarn(`Unable to locate element with identifier ${this.scrollTarget}`, this)\n      }\n    }\n  },\n\n  methods: {\n    onScroll () {\n      if (!this.canScroll) return\n\n      this.previousScroll = this.currentScroll\n      this.currentScroll = this.target\n        ? this.target.scrollTop\n        : window.pageYOffset\n\n      this.isScrollingUp = this.currentScroll < this.previousScroll\n      this.currentThreshold = Math.abs(this.currentScroll - this.computedScrollThreshold)\n\n      this.$nextTick(() => {\n        if (\n          Math.abs(this.currentScroll - this.savedScroll) >\n          this.computedScrollThreshold\n        ) this.thresholdMet()\n      })\n    },\n    /**\n     * The method invoked when\n     * scrolling in any direction\n     * has exceeded the threshold\n     */\n    thresholdMet () { /* noop */ },\n  },\n})\n","import './_grid.sass'\nimport { createSimpleFunctional } from '../../util/helpers'\n\nexport default createSimpleFunctional('spacer', 'div', 'v-spacer')\n","import { factory as PositionableFactory } from '../positionable'\nimport { TargetProp } from 'vuetify/types/services/application'\n\n// Util\nimport mixins from '../../util/mixins'\n\nexport default function applicationable (value: TargetProp, events: string[] = []) {\n  /* @vue/component */\n  return mixins(PositionableFactory(['absolute', 'fixed'])).extend({\n    name: 'applicationable',\n\n    props: {\n      app: Boolean,\n    },\n\n    computed: {\n      applicationProperty (): TargetProp {\n        return value\n      },\n    },\n\n    watch: {\n      // If previous value was app\n      // reset the provided prop\n      app (x: boolean, prev: boolean) {\n        prev\n          ? this.removeApplication(true)\n          : this.callUpdate()\n      },\n      applicationProperty (newVal, oldVal) {\n        this.$vuetify.application.unregister(this._uid, oldVal)\n      },\n    },\n\n    activated () {\n      this.callUpdate()\n    },\n\n    created () {\n      for (let i = 0, length = events.length; i < length; i++) {\n        this.$watch(events[i], this.callUpdate)\n      }\n      this.callUpdate()\n    },\n\n    mounted () {\n      this.callUpdate()\n    },\n\n    deactivated () {\n      this.removeApplication()\n    },\n\n    destroyed () {\n      this.removeApplication()\n    },\n\n    methods: {\n      callUpdate () {\n        if (!this.app) return\n\n        this.$vuetify.application.register(\n          this._uid,\n          this.applicationProperty,\n          this.updateApplication()\n        )\n      },\n      removeApplication (force = false) {\n        if (!force && !this.app) return\n\n        this.$vuetify.application.unregister(\n          this._uid,\n          this.applicationProperty\n        )\n      },\n      updateApplication: () => 0,\n    },\n  })\n}\n","// Styles\nimport './VAppBar.sass'\n\n// Extensions\nimport VToolbar from '../VToolbar/VToolbar'\n\n// Directives\nimport Scroll from '../../directives/scroll'\n\n// Mixins\nimport Applicationable from '../../mixins/applicationable'\nimport Scrollable from '../../mixins/scrollable'\nimport SSRBootable from '../../mixins/ssr-bootable'\nimport Toggleable from '../../mixins/toggleable'\n\n// Utilities\nimport { convertToUnit } from '../../util/helpers'\nimport mixins from '../../util/mixins'\n\n// Types\nimport { VNode } from 'vue'\n\nconst baseMixins = mixins(\n  VToolbar,\n  Scrollable,\n  SSRBootable,\n  Toggleable,\n  Applicationable('top', [\n    'clippedLeft',\n    'clippedRight',\n    'computedHeight',\n    'invertedScroll',\n    'isExtended',\n    'isProminent',\n    'value',\n  ])\n)\n\n/* @vue/component */\nexport default baseMixins.extend({\n  name: 'v-app-bar',\n\n  directives: { Scroll },\n\n  provide (): object {\n    return { VAppBar: this }\n  },\n\n  props: {\n    clippedLeft: Boolean,\n    clippedRight: Boolean,\n    collapseOnScroll: Boolean,\n    elevateOnScroll: Boolean,\n    fadeImgOnScroll: Boolean,\n    hideOnScroll: Boolean,\n    invertedScroll: Boolean,\n    scrollOffScreen: Boolean,\n    shrinkOnScroll: Boolean,\n    value: {\n      type: Boolean,\n      default: true,\n    },\n  },\n\n  data () {\n    return {\n      isActive: this.value,\n    }\n  },\n\n  computed: {\n    applicationProperty (): string {\n      return !this.bottom ? 'top' : 'bottom'\n    },\n    canScroll (): boolean {\n      return (\n        Scrollable.options.computed.canScroll.call(this) &&\n        (\n          this.invertedScroll ||\n          this.elevateOnScroll ||\n          this.hideOnScroll ||\n          this.collapseOnScroll ||\n          this.isBooted ||\n          // If falsy, user has provided an\n          // explicit value which should\n          // overwrite anything we do\n          !this.value\n        )\n      )\n    },\n    classes (): object {\n      return {\n        ...VToolbar.options.computed.classes.call(this),\n        'v-toolbar--collapse': this.collapse || this.collapseOnScroll,\n        'v-app-bar': true,\n        'v-app-bar--clipped': this.clippedLeft || this.clippedRight,\n        'v-app-bar--fade-img-on-scroll': this.fadeImgOnScroll,\n        'v-app-bar--elevate-on-scroll': this.elevateOnScroll,\n        'v-app-bar--fixed': !this.absolute && (this.app || this.fixed),\n        'v-app-bar--hide-shadow': this.hideShadow,\n        'v-app-bar--is-scrolled': this.currentScroll > 0,\n        'v-app-bar--shrink-on-scroll': this.shrinkOnScroll,\n      }\n    },\n    scrollRatio (): number {\n      const threshold = this.computedScrollThreshold\n      return Math.max((threshold - this.currentScroll) / threshold, 0)\n    },\n    computedContentHeight (): number {\n      if (!this.shrinkOnScroll) return VToolbar.options.computed.computedContentHeight.call(this)\n\n      const min = this.dense ? 48 : 56\n      const max = this.computedOriginalHeight\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedFontSize (): number | undefined {\n      if (!this.isProminent) return undefined\n\n      const min = 1.25\n      const max = 1.5\n\n      return min + (max - min) * this.scrollRatio\n    },\n    computedLeft (): number {\n      if (!this.app || this.clippedLeft) return 0\n\n      return this.$vuetify.application.left\n    },\n    computedMarginTop (): number {\n      if (!this.app) return 0\n\n      return this.$vuetify.application.bar\n    },\n    computedOpacity (): number | undefined {\n      if (!this.fadeImgOnScroll) return undefined\n\n      return this.scrollRatio\n    },\n    computedOriginalHeight (): number {\n      let height = VToolbar.options.computed.computedContentHeight.call(this)\n      if (this.isExtended) height += parseInt(this.extensionHeight)\n      return height\n    },\n    computedRight (): number {\n      if (!this.app || this.clippedRight) return 0\n\n      return this.$vuetify.application.right\n    },\n    computedScrollThreshold (): number {\n      if (this.scrollThreshold) return Number(this.scrollThreshold)\n\n      return this.computedOriginalHeight - (this.dense ? 48 : 56)\n    },\n    computedTransform (): number {\n      if (\n        !this.canScroll ||\n        (this.elevateOnScroll && this.currentScroll === 0 && this.isActive)\n      ) return 0\n\n      if (this.isActive) return 0\n\n      const scrollOffScreen = this.scrollOffScreen\n        ? this.computedHeight\n        : this.computedContentHeight\n\n      return this.bottom ? scrollOffScreen : -scrollOffScreen\n    },\n    hideShadow (): boolean {\n      if (this.elevateOnScroll && this.isExtended) {\n        return this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.elevateOnScroll) {\n        return this.currentScroll === 0 ||\n          this.computedTransform < 0\n      }\n\n      return (\n        !this.isExtended ||\n        this.scrollOffScreen\n      ) && this.computedTransform !== 0\n    },\n    isCollapsed (): boolean {\n      if (!this.collapseOnScroll) {\n        return VToolbar.options.computed.isCollapsed.call(this)\n      }\n\n      return this.currentScroll > 0\n    },\n    isProminent (): boolean {\n      return (\n        VToolbar.options.computed.isProminent.call(this) ||\n        this.shrinkOnScroll\n      )\n    },\n    styles (): object {\n      return {\n        ...VToolbar.options.computed.styles.call(this),\n        fontSize: convertToUnit(this.computedFontSize, 'rem'),\n        marginTop: convertToUnit(this.computedMarginTop),\n        transform: `translateY(${convertToUnit(this.computedTransform)})`,\n        left: convertToUnit(this.computedLeft),\n        right: convertToUnit(this.computedRight),\n      }\n    },\n  },\n\n  watch: {\n    canScroll: 'onScroll',\n    computedTransform () {\n      // Normally we do not want the v-app-bar\n      // to update the application top value\n      // to avoid screen jump. However, in\n      // this situation, we must so that\n      // the clipped drawer can update\n      // its top value when scrolled\n      if (\n        !this.canScroll ||\n        (!this.clippedLeft && !this.clippedRight)\n      ) return\n\n      this.callUpdate()\n    },\n    invertedScroll (val: boolean) {\n      this.isActive = !val || this.currentScroll !== 0\n    },\n  },\n\n  created () {\n    if (this.invertedScroll) this.isActive = false\n  },\n\n  methods: {\n    genBackground () {\n      const render = VToolbar.options.methods.genBackground.call(this)\n\n      render.data = this._b(render.data || {}, render.tag!, {\n        style: { opacity: this.computedOpacity },\n      })\n\n      return render\n    },\n    updateApplication (): number {\n      return this.invertedScroll\n        ? 0\n        : this.computedHeight + this.computedTransform\n    },\n    thresholdMet () {\n      if (this.invertedScroll) {\n        this.isActive = this.currentScroll > this.computedScrollThreshold\n        return\n      }\n\n      if (this.hideOnScroll) {\n        this.isActive = this.isScrollingUp ||\n          this.currentScroll < this.computedScrollThreshold\n      }\n\n      if (this.currentThreshold < this.computedScrollThreshold) return\n\n      this.savedScroll = this.currentScroll\n    },\n  },\n\n  render (h): VNode {\n    const render = VToolbar.options.render.call(this, h)\n\n    render.data = render.data || {}\n\n    if (this.canScroll) {\n      render.data.directives = render.data.directives || []\n      render.data.directives.push({\n        arg: this.scrollTarget,\n        name: 'scroll',\n        value: this.onScroll,\n      })\n    }\n\n    return render\n  },\n})\n","// Styles\nimport './VToolbar.sass'\n\n// Extensions\nimport VSheet from '../VSheet/VSheet'\n\n// Components\nimport VImg, { srcObject } from '../VImg/VImg'\n\n// Utilities\nimport { convertToUnit, getSlot } from '../../util/helpers'\nimport { breaking } from '../../util/console'\n\n// Types\nimport { VNode, PropType } from 'vue'\n\n/* @vue/component */\nexport default VSheet.extend({\n  name: 'v-toolbar',\n\n  props: {\n    absolute: Boolean,\n    bottom: Boolean,\n    collapse: Boolean,\n    dense: Boolean,\n    extended: Boolean,\n    extensionHeight: {\n      default: 48,\n      type: [Number, String],\n    },\n    flat: Boolean,\n    floating: Boolean,\n    prominent: Boolean,\n    short: Boolean,\n    src: {\n      type: [String, Object] as PropType<string | srcObject>,\n      default: '',\n    },\n    tag: {\n      type: String,\n      default: 'header',\n    },\n  },\n\n  data: () => ({\n    isExtended: false,\n  }),\n\n  computed: {\n    computedHeight (): number {\n      const height = this.computedContentHeight\n\n      if (!this.isExtended) return height\n\n      const extensionHeight = parseInt(this.extensionHeight)\n\n      return this.isCollapsed\n        ? height\n        : height + (!isNaN(extensionHeight) ? extensionHeight : 0)\n    },\n    computedContentHeight (): number {\n      if (this.height) return parseInt(this.height)\n      if (this.isProminent && this.dense) return 96\n      if (this.isProminent && this.short) return 112\n      if (this.isProminent) return 128\n      if (this.dense) return 48\n      if (this.short || this.$vuetify.breakpoint.smAndDown) return 56\n      return 64\n    },\n    classes (): object {\n      return {\n        ...VSheet.options.computed.classes.call(this),\n        'v-toolbar': true,\n        'v-toolbar--absolute': this.absolute,\n        'v-toolbar--bottom': this.bottom,\n        'v-toolbar--collapse': this.collapse,\n        'v-toolbar--collapsed': this.isCollapsed,\n        'v-toolbar--dense': this.dense,\n        'v-toolbar--extended': this.isExtended,\n        'v-toolbar--flat': this.flat,\n        'v-toolbar--floating': this.floating,\n        'v-toolbar--prominent': this.isProminent,\n      }\n    },\n    isCollapsed (): boolean {\n      return this.collapse\n    },\n    isProminent (): boolean {\n      return this.prominent\n    },\n    styles (): object {\n      return {\n        ...this.measurableStyles,\n        height: convertToUnit(this.computedHeight),\n      }\n    },\n  },\n\n  created () {\n    const breakingProps = [\n      ['app', '<v-app-bar app>'],\n      ['manual-scroll', '<v-app-bar :value=\"false\">'],\n      ['clipped-left', '<v-app-bar clipped-left>'],\n      ['clipped-right', '<v-app-bar clipped-right>'],\n      ['inverted-scroll', '<v-app-bar inverted-scroll>'],\n      ['scroll-off-screen', '<v-app-bar scroll-off-screen>'],\n      ['scroll-target', '<v-app-bar scroll-target>'],\n      ['scroll-threshold', '<v-app-bar scroll-threshold>'],\n      ['card', '<v-app-bar flat>'],\n    ]\n\n    /* istanbul ignore next */\n    breakingProps.forEach(([original, replacement]) => {\n      if (this.$attrs.hasOwnProperty(original)) breaking(original, replacement, this)\n    })\n  },\n\n  methods: {\n    genBackground () {\n      const props = {\n        height: convertToUnit(this.computedHeight),\n        src: this.src,\n      }\n\n      const image = this.$scopedSlots.img\n        ? this.$scopedSlots.img({ props })\n        : this.$createElement(VImg, { props })\n\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__image',\n      }, [image])\n    },\n    genContent () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__content',\n        style: {\n          height: convertToUnit(this.computedContentHeight),\n        },\n      }, getSlot(this))\n    },\n    genExtension () {\n      return this.$createElement('div', {\n        staticClass: 'v-toolbar__extension',\n        style: {\n          height: convertToUnit(this.extensionHeight),\n        },\n      }, getSlot(this, 'extension'))\n    },\n  },\n\n  render (h): VNode {\n    this.isExtended = this.extended || !!this.$scopedSlots.extension\n\n    const children = [this.genContent()]\n    const data = this.setBackgroundColor(this.color, {\n      class: this.classes,\n      style: this.styles,\n      on: this.$listeners,\n    })\n\n    if (this.isExtended) children.push(this.genExtension())\n    if (this.src || this.$scopedSlots.img) children.unshift(this.genBackground())\n\n    return h(this.tag, data, children)\n  },\n})\n","import { VNodeDirective } from 'vue/types/vnode'\nimport { DirectiveOptions } from 'vue'\n\ninterface ScrollVNodeDirective extends Omit<VNodeDirective, 'modifiers'> {\n  value: EventListener | {\n    handler: EventListener\n    options?: boolean | AddEventListenerOptions\n  } | EventListenerObject & { options?: boolean | AddEventListenerOptions }\n  modifiers?: {\n    self?: boolean\n  }\n}\n\nfunction inserted (el: HTMLElement, binding: ScrollVNodeDirective) {\n  const { self = false } = binding.modifiers || {}\n  const value = binding.value\n  const options = (typeof value === 'object' && value.options) || { passive: true }\n  const handler = typeof value === 'function' || 'handleEvent' in value ? value : value.handler\n\n  const target = self\n    ? el\n    : binding.arg\n      ? document.querySelector(binding.arg)\n      : window\n\n  if (!target) return\n\n  target.addEventListener('scroll', handler, options)\n\n  el._onScroll = {\n    handler,\n    options,\n    // Don't reference self\n    target: self ? undefined : target,\n  }\n}\n\nfunction unbind (el: HTMLElement) {\n  if (!el._onScroll) return\n\n  const { handler, options, target = el } = el._onScroll\n\n  target.removeEventListener('scroll', handler, options)\n  delete el._onScroll\n}\n\nexport const Scroll = {\n  inserted,\n  unbind,\n} as DirectiveOptions\n\nexport default Scroll\n"],"sourceRoot":""}